{"name":"openjudge","tagline":"LAN hosted programming contest judge.","body":"OpenJudge\r\n=========\r\n[![Build Status](https://travis-ci.org/theSage21/openJudge.svg)](https://travis-ci.org/theSage21/openJudge)\r\n[![Coverage Status](https://coveralls.io/repos/theSage21/openJudge/badge.svg?branch=master&service=github)](https://coveralls.io/github/theSage21/openJudge?branch=master)\r\n\r\nA judge I made to judge the programming competitions in college.\r\nIt is a checking server and requires a web interface to function.\r\n\r\nCurrently the languages supported are:\r\n\r\n- Python2\r\n- Python3\r\n- Gcc\r\n- G++\r\n\r\nOthers may be added by adding a shell script in the `wrappers` folder.\r\n\r\nSetup\r\n-----\r\n\r\n```\r\ncd ~\r\nmkdir judge\r\ncd judge\r\nvirtualenv -p python3 env\r\nsource env/bin/activate\r\npip install openjudge\r\n```\r\n\r\nThe interface for the Judge does not ship with the judge.\r\n\r\nThe interface I use is [judge-interface](https://github.com/theSage21/judge-interface).\r\n\r\nIn order to use that one can do the following.\r\n\r\n```\r\ncd ~\r\ngit clone https://github.com/theSage21/judge-interface.git\r\ncd judge-interface\r\n./setup.sh\r\n```\r\n\r\n1. `./setup.sh` does most of the work for you.\r\n2. Set the SLAVE_ADDRESSES in settings.py by default it is set to 127.0.0.1:9000\r\n\r\nThe interface is set up as a standard django server. I prefer using Nginx,Gunicorn as a \r\ncombination. Check my [blog](http://arjoonn.blogspot.com/2015/05/django-gunicorn-and-nginx.html) for how to set that up.\r\n\r\nNote that the slave will have to run on a linux like machine. I shamelessly used redirection\r\nand I have no idea how they translate on a windows box if they do at all.\r\n\r\nUsage during the competition\r\n----------------------------\r\n\r\n1. Register users with `python add_user.py` using a python shell at the registration desk.\r\n   the file can be found in `judge-interface/webserver/`\r\n2. Run the interface with `./runserver.sh`\r\n3. Run the judge with `python -c 'from openjudge.slave import Slave;Slave().run()'`\r\n3. Tell everyone to navigate to the webserver. It will be something like `192.168.1.45`\r\n4. Enjoy the fruits of watching a hundred people program.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}